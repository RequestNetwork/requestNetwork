{
  "contractName": "StorageFeeCollector",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_requestBurnerContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "burnerAddress",
          "type": "address"
        }
      ],
      "name": "UpdatedBurnerContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimumFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rateFeesNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rateFeesDenominator",
          "type": "uint256"
        }
      ],
      "name": "UpdatedFeeParameters",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        }
      ],
      "name": "UpdatedMinimumFeeThreshold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelistAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minimumFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rateFeesDenominator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rateFeesNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "requestBurnerContract",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rateFeesNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rateFeesDenominator",
          "type": "uint256"
        }
      ],
      "name": "setFeeParameters",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_requestBurnerContract",
          "type": "address"
        }
      ],
      "name": "setRequestBurnerContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_contentSize",
          "type": "uint256"
        }
      ],
      "name": "getFeesAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_requestBurnerContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"burnerAddress\",\"type\":\"address\"}],\"name\":\"UpdatedBurnerContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rateFeesNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rateFeesDenominator\",\"type\":\"uint256\"}],\"name\":\"UpdatedFeeParameters\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"UpdatedMinimumFeeThreshold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminRemoved\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contentSize\",\"type\":\"uint256\"}],\"name\":\"getFeesAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelistAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rateFeesDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rateFeesNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requestBurnerContract\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rateFeesNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rateFeesDenominator\",\"type\":\"uint256\"}],\"name\":\"setFeeParameters\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_requestBurnerContract\",\"type\":\"address\"}],\"name\":\"setRequestBurnerContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"constructor\":{\"params\":{\"_requestBurnerContract\":\"Address of the contract where to send the ether. This burner contract will have a function that can be called by anyone and will exchange ether to req via Kyber and burn the REQ\"}},\"getFeesAmount(uint256)\":{\"params\":{\"_contentSize\":\"Size of the content of the block to be stored\"},\"return\":\"the expected amount of fees in wei\"},\"setFeeParameters(uint256,uint256,uint256)\":{\"details\":\"if the _rateFeesDenominator is 0, it will be treated as 1. (in other words, the computation of the fees will not use it)\",\"params\":{\"_minimumFee\":\"minimum fixed fee\",\"_rateFeesDenominator\":\"denominator rate\",\"_rateFeesNumerator\":\"numerator rate\"}},\"setRequestBurnerContract(address)\":{\"params\":{\"_requestBurnerContract\":\"address of the contract that will burn req token (probably through Kyber)\"}}},\"title\":\"StorageFeeCollector\"},\"userdoc\":{\"methods\":{\"getFeesAmount(uint256)\":{\"notice\":\"Computes the fees.\"},\"setFeeParameters(uint256,uint256,uint256)\":{\"notice\":\"Sets the fees rate and minimum fee.\"},\"setRequestBurnerContract(address)\":{\"notice\":\"Set the request burner address.\"}},\"notice\":\"StorageFeeCollector is a contract managing the fees\"}},\"settings\":{\"compilationTarget\":{\"/Users/bertrand/Desktop/requestNetwork-private/packages/smart-contracts/src/StorageFeeCollector.sol\":\"StorageFeeCollector\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/bertrand/Desktop/requestNetwork-private/packages/smart-contracts/src/StorageFeeCollector.sol\":{\"keccak256\":\"0x0f20da91a812b6d628d988ecde15c06004961db61f5261b4f2bdbf8ccbdd5381\",\"urls\":[\"bzz-raw://ff03e11b9cdf4144137570f2e67257b5442c5e3e1dd6284949b5f1cca833f16c\",\"dweb:/ipfs/QmcfomYGrWVwVvRbfhM7SrX27zwT6TGCpWmMCy9hX8uKcg\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x659ba0f9a3392cd50a8a5fafaf5dfd8c6a0878f6a4613bceff4e90dceddcd865\",\"urls\":[\"bzz-raw://4ca6617349a9b36fd82e9442a8e445ce9021a174e4399d1457ddc894ee3f5df3\",\"dweb:/ipfs/QmcmyB4cNazZ1sw963Afaijt67M9bDgwmGXCgQajGTD4tm\"]},\"openzeppelin-solidity/contracts/access/roles/WhitelistAdminRole.sol\":{\"keccak256\":\"0x296248d0db94ffd742e1918944172d8c6f0eda2395330f7e33c058884620efdc\",\"urls\":[\"bzz-raw://bbedb198a9c62231d4d544c62ce1fe10b6df9ade250bb99e69dfd6bb000784bb\",\"dweb:/ipfs/QmcmHNuJBMbmFZSLfcX8g3rwUsntpPkJgihuGFrjBuapQN\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a62380380610a628339818101604052602081101561003357600080fd5b81019080805190602001909291905050506100533361009a60201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061023c565b6100b28160006100f860201b6107361790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561013257600080fd5b61014282826101aa60201b60201c565b1561014c57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101e557600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6108178061024b6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806375c268f31161006657806375c268f3146101715780638f5b87e11461018f578063bb5f747b146101d1578063cb2537cb1461022d578063e40e84571461026f5761009e565b80631a7626e7146100a3578063263f6a42146100c15780634c5a628c146100df578063524eb29c146100e95780637362d9c81461012d575b600080fd5b6100ab6102b9565b6040518082815260200191505060405180910390f35b6100c96102bf565b6040518082815260200191505060405180910390f35b6100e76102c5565b005b61012b600480360360208110156100ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102d0565b005b61016f6004803603602081101561014357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103ab565b005b6101796103c9565b6040518082815260200191505060405180910390f35b6101bb600480360360208110156101a557600080fd5b81019080803590602001909291905050506103cf565b6040518082815260200191505060405180910390f35b610213600480360360208110156101e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610429565b604051808215151515815260200191505060405180910390f35b61026d6004803603606081101561024357600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610446565b005b6102776104bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60015481565b60025481565b6102ce336104e5565b565b6102d933610429565b6102e257600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb2c87fdcc342ca09b09df1fb16a153b7ceb0a4b56ad223f12c8fbff63f98ccd8600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6103b433610429565b6103bd57600080fd5b6103c68161053f565b50565b60035481565b6000806103e76002548461059990919063ffffffff16565b905060006003541461040b57610408600354826105d390919063ffffffff16565b90505b600154811161041f57600154915050610424565b809150505b919050565b600061043f8260006105f990919063ffffffff16565b9050919050565b61044f33610429565b61045857600080fd5b8260018190555081600281905550806003819055507f741cafcfc8058975fab7ed6bdaf402b47dca8aa9826990c454c058a6f9b06d1660015460025460035460405180848152602001838152602001828152602001935050505060405180910390a1505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104f981600061068b90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b61055381600061073690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b6000808314156105ac57600090506105cd565b60008284029050828482816105bd57fe5b04146105c857600080fd5b809150505b92915050565b60008082116105e157600080fd5b60008284816105ec57fe5b0490508091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561063457600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106c557600080fd5b6106cf82826105f9565b6106d857600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561077057600080fd5b61077a82826105f9565b1561078457600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fea265627a7a7231582076b846bb1b51b072f754a8d71ce605a81c2105740aaaa7a9ea5a1129af98cf0264736f6c634300050c0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806375c268f31161006657806375c268f3146101715780638f5b87e11461018f578063bb5f747b146101d1578063cb2537cb1461022d578063e40e84571461026f5761009e565b80631a7626e7146100a3578063263f6a42146100c15780634c5a628c146100df578063524eb29c146100e95780637362d9c81461012d575b600080fd5b6100ab6102b9565b6040518082815260200191505060405180910390f35b6100c96102bf565b6040518082815260200191505060405180910390f35b6100e76102c5565b005b61012b600480360360208110156100ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102d0565b005b61016f6004803603602081101561014357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103ab565b005b6101796103c9565b6040518082815260200191505060405180910390f35b6101bb600480360360208110156101a557600080fd5b81019080803590602001909291905050506103cf565b6040518082815260200191505060405180910390f35b610213600480360360208110156101e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610429565b604051808215151515815260200191505060405180910390f35b61026d6004803603606081101561024357600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610446565b005b6102776104bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60015481565b60025481565b6102ce336104e5565b565b6102d933610429565b6102e257600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb2c87fdcc342ca09b09df1fb16a153b7ceb0a4b56ad223f12c8fbff63f98ccd8600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6103b433610429565b6103bd57600080fd5b6103c68161053f565b50565b60035481565b6000806103e76002548461059990919063ffffffff16565b905060006003541461040b57610408600354826105d390919063ffffffff16565b90505b600154811161041f57600154915050610424565b809150505b919050565b600061043f8260006105f990919063ffffffff16565b9050919050565b61044f33610429565b61045857600080fd5b8260018190555081600281905550806003819055507f741cafcfc8058975fab7ed6bdaf402b47dca8aa9826990c454c058a6f9b06d1660015460025460035460405180848152602001838152602001828152602001935050505060405180910390a1505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104f981600061068b90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b61055381600061073690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b6000808314156105ac57600090506105cd565b60008284029050828482816105bd57fe5b04146105c857600080fd5b809150505b92915050565b60008082116105e157600080fd5b60008284816105ec57fe5b0490508091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561063457600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106c557600080fd5b6106cf82826105f9565b6106d857600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561077057600080fd5b61077a82826105f9565b1561078457600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fea265627a7a7231582076b846bb1b51b072f754a8d71ce605a81c2105740aaaa7a9ea5a1129af98cf0264736f6c634300050c0032",
  "sourceMap": "269:3498:4:-;;;1698:122;8:9:-1;5:2;;;30:1;27;20:12;5:2;1698:122:4;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1698:122:4;;;;;;;;;;;;;;;;433:30:13;452:10;433:18;;;:30;;:::i;:::-;1793:22:4;1769:21;;:46;;;;;;;;;;;;;;;;;;1698:122;269:3498;;923:143:13;987:29;1008:7;987:16;:20;;;;;;:29;;;;:::i;:::-;1051:7;1031:28;;;;;;;;;;;;923:143;:::o;259:181:12:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;786:162::-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;269:3498:4:-;;;;;;;",
  "deployedSourceMap": "269:3498:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;269:3498:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1045:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1074:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;826:91:13;;;:::i;:::-;;2686:224:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2686:224:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;706:114:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;706:114:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;1110:34:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3081:404;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3081:404:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;577:123:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;577:123:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2160:353:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2160:353:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1203:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1045:25;;;;:::o;1074:32::-;;;;:::o;826:91:13:-;877:33;899:10;877:21;:33::i;:::-;826:91::o;2686:224:4:-;524:28:13;541:10;524:16;:28::i;:::-;516:37;;;;;;2828:22:4;2804:21;;:46;;;;;;;;;;;;;;;;;;2861:44;2883:21;;;;;;;;;;;2861:44;;;;;;;;;;;;;;;;;;;;;;2686:224;:::o;706:114:13:-;524:28;541:10;524:16;:28::i;:::-;516:37;;;;;;786:27;805:7;786:18;:27::i;:::-;706:114;:::o;1110:34:4:-;;;;:::o;3081:404::-;3158:7;3199:22;3224:35;3241:17;;3224:12;:16;;:35;;;;:::i;:::-;3199:60;;3293:1;3270:19;;:24;3266:101;;3321:39;3340:19;;3321:14;:18;;:39;;;;:::i;:::-;3304:56;;3266:101;3395:10;;3377:14;:28;3373:108;;3422:10;;3415:17;;;;;3373:108;3460:14;3453:21;;;3081:404;;;;:::o;577:123:13:-;641:4;664:29;685:7;664:16;:20;;:29;;;;:::i;:::-;657:36;;577:123;;;:::o;2160:353:4:-;524:28:13;541:10;524:16;:28::i;:::-;516:37;;;;;;2322:11:4;2309:10;:24;;;;2359:18;2339:17;:38;;;;2405:20;2383:19;:42;;;;2436:72;2457:10;;2469:17;;2488:19;;2436:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2160:353;;;:::o;1203:44::-;;;;;;;;;;;;;:::o;1072:151:13:-;1139:32;1163:7;1139:16;:23;;:32;;;;:::i;:::-;1208:7;1186:30;;;;;;;;;;;;1072:151;:::o;923:143::-;987:29;1008:7;987:16;:20;;:29;;;;:::i;:::-;1051:7;1031:28;;;;;;;;;;;;923:143;:::o;229:421:15:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;:10;605:19;;;;;;642:1;635:8;;;229:421;;;;;:::o;778:296::-;836:7;933:1;929;:5;921:14;;;;;;945:9;961:1;957;:5;;;;;;945:17;;1066:1;1059:8;;;778:296;;;;:::o;786:162:12:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;259:181::-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/access/roles/WhitelistAdminRole.sol\";\n\n\n/**\n * @title StorageFeeCollector\n *\n * @notice StorageFeeCollector is a contract managing the fees\n */\ncontract StorageFeeCollector is WhitelistAdminRole {\n  using SafeMath for uint256;\n\n  /**\n   * Fee computation for storage are based on four parameters:\n   * minimumFee (wei) fee that will be applied for any size of storage\n   * rateFeesNumerator (wei) and rateFeesDenominator (byte) define the variable fee,\n   * for each <rateFeesDenominator> bytes above threshold, <rateFeesNumerator> wei will be charged\n   *\n   * Example:\n   * If the size to store is 50 bytes, the threshold is 100 bytes and the minimum fee is 300 wei,\n   * then 300 will be charged\n   *\n   * If rateFeesNumerator is 2 and rateFeesDenominator is 1 then 2 wei will be charged for every bytes above threshold,\n   * if the size to store is 150 bytes then the fee will be 300 + (150-100)*2 = 400 wei\n   */\n  uint256 public minimumFee;\n  uint256 public rateFeesNumerator;\n  uint256 public rateFeesDenominator;\n\n  // address of the contract that will burn req token\n  address payable public requestBurnerContract;\n\n  event UpdatedFeeParameters(uint256 minimumFee, uint256 rateFeesNumerator, uint256 rateFeesDenominator);\n  event UpdatedMinimumFeeThreshold(uint256 threshold);\n  event UpdatedBurnerContract(address burnerAddress);\n\n  /**\n   * @param _requestBurnerContract Address of the contract where to send the ether.\n   * This burner contract will have a function that can be called by anyone and will exchange ether to req via Kyber and burn the REQ\n   */\n  constructor(address payable _requestBurnerContract)\n    public\n  {\n    requestBurnerContract = _requestBurnerContract;\n  }\n\n  /**\n    * @notice Sets the fees rate and minimum fee.\n    * @dev if the _rateFeesDenominator is 0, it will be treated as 1. (in other words, the computation of the fees will not use it)\n    * @param _minimumFee minimum fixed fee\n    * @param _rateFeesNumerator numerator rate\n    * @param _rateFeesDenominator denominator rate\n    */\n  function setFeeParameters(uint256 _minimumFee, uint256 _rateFeesNumerator, uint256 _rateFeesDenominator)\n    external\n    onlyWhitelistAdmin\n  {\n    minimumFee = _minimumFee;\n    rateFeesNumerator = _rateFeesNumerator;\n    rateFeesDenominator = _rateFeesDenominator;\n    emit UpdatedFeeParameters(minimumFee, rateFeesNumerator, rateFeesDenominator);\n  }\n\n  /**\n    * @notice Set the request burner address.\n    * @param _requestBurnerContract address of the contract that will burn req token (probably through Kyber)\n    */\n  function setRequestBurnerContract(address payable _requestBurnerContract)\n    external\n    onlyWhitelistAdmin\n  {\n    requestBurnerContract = _requestBurnerContract;\n    emit UpdatedBurnerContract(requestBurnerContract);\n  }\n\n  /**\n    * @notice Computes the fees.\n    * @param _contentSize Size of the content of the block to be stored\n    * @return the expected amount of fees in wei\n    */\n  function getFeesAmount(uint256 _contentSize)\n    public\n    view\n    returns(uint256)\n  {\n    // Transactions fee\n    uint256 computedAllFee = _contentSize.mul(rateFeesNumerator);\n\n    if (rateFeesDenominator != 0) {\n      computedAllFee = computedAllFee.div(rateFeesDenominator);\n    }\n\n    if (computedAllFee <= minimumFee) {\n      return minimumFee;\n    } else {\n      return computedAllFee;\n    }\n  }\n\n  /**\n    * @notice Sends fees to the request burning address.\n    * @param _amount amount to send to the burning address\n    */\n  function collectForREQBurning(uint256 _amount)\n    internal\n  {\n    // .transfer throws on failure\n    requestBurnerContract.transfer(_amount);\n  }\n}\n",
  "sourcePath": "/Users/bertrand/Desktop/requestNetwork-private/packages/smart-contracts/src/StorageFeeCollector.sol",
  "ast": {
    "absolutePath": "/Users/bertrand/Desktop/requestNetwork-private/packages/smart-contracts/src/StorageFeeCollector.sol",
    "exportedSymbols": {
      "StorageFeeCollector": [
        337
      ]
    },
    "id": 338,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 200,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 201,
        "nodeType": "ImportDirective",
        "scope": 338,
        "sourceUnit": 1571,
        "src": "25:59:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/roles/WhitelistAdminRole.sol",
        "file": "openzeppelin-solidity/contracts/access/roles/WhitelistAdminRole.sol",
        "id": 202,
        "nodeType": "ImportDirective",
        "scope": 338,
        "sourceUnit": 1334,
        "src": "85:77:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 203,
              "name": "WhitelistAdminRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1333,
              "src": "301:18:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistAdminRole_$1333",
                "typeString": "contract WhitelistAdminRole"
              }
            },
            "id": 204,
            "nodeType": "InheritanceSpecifier",
            "src": "301:18:4"
          }
        ],
        "contractDependencies": [
          1333
        ],
        "contractKind": "contract",
        "documentation": "@title StorageFeeCollector\n * @notice StorageFeeCollector is a contract managing the fees",
        "fullyImplemented": true,
        "id": 337,
        "linearizedBaseContracts": [
          337,
          1333
        ],
        "name": "StorageFeeCollector",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 207,
            "libraryName": {
              "contractScope": null,
              "id": 205,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1570,
              "src": "330:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1570",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "324:27:4",
            "typeName": {
              "id": 206,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "343:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 209,
            "name": "minimumFee",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "1045:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 208,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1045:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 211,
            "name": "rateFeesNumerator",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "1074:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 210,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1074:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 213,
            "name": "rateFeesDenominator",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "1110:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 212,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1110:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 215,
            "name": "requestBurnerContract",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "1203:44:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 214,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1203:15:4",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 223,
            "name": "UpdatedFeeParameters",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "indexed": false,
                  "name": "minimumFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "1279:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 219,
                  "indexed": false,
                  "name": "rateFeesNumerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "1299:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 221,
                  "indexed": false,
                  "name": "rateFeesDenominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "1326:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1278:76:4"
            },
            "src": "1252:103:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 227,
            "name": "UpdatedMinimumFeeThreshold",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "indexed": false,
                  "name": "threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "1391:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1390:19:4"
            },
            "src": "1358:52:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 231,
            "name": "UpdatedBurnerContract",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "indexed": false,
                  "name": "burnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "1441:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1440:23:4"
            },
            "src": "1413:51:4"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "1763:57:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 236,
                      "name": "requestBurnerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "1769:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 237,
                      "name": "_requestBurnerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "1793:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1769:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:46:4"
                }
              ]
            },
            "documentation": "@param _requestBurnerContract Address of the contract where to send the ether.\nThis burner contract will have a function that can be called by anyone and will exchange ether to req via Kyber and burn the REQ",
            "id": 241,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "name": "_requestBurnerContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "1710:38:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1709:40:4"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1763:0:4"
            },
            "scope": 337,
            "src": "1698:122:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "2303:210:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 252,
                      "name": "minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 209,
                      "src": "2309:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 253,
                      "name": "_minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 243,
                      "src": "2322:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2309:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:24:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 256,
                      "name": "rateFeesNumerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "2339:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 257,
                      "name": "_rateFeesNumerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "2359:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2339:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "2339:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 260,
                      "name": "rateFeesDenominator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "2383:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 261,
                      "name": "_rateFeesDenominator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "2405:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2383:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "2383:42:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 265,
                        "name": "minimumFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "2457:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 266,
                        "name": "rateFeesNumerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "2469:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "rateFeesDenominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "2488:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 264,
                      "name": "UpdatedFeeParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "2436:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2436:72:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "EmitStatement",
                  "src": "2431:77:4"
                }
              ]
            },
            "documentation": "@notice Sets the fees rate and minimum fee.\n@dev if the _rateFeesDenominator is 0, it will be treated as 1. (in other words, the computation of the fees will not use it)\n@param _minimumFee minimum fixed fee\n@param _rateFeesNumerator numerator rate\n@param _rateFeesDenominator denominator rate",
            "id": 271,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 250,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 249,
                  "name": "onlyWhitelistAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1266,
                  "src": "2282:18:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2282:18:4"
              }
            ],
            "name": "setFeeParameters",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "name": "_minimumFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "2186:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2186:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 245,
                  "name": "_rateFeesNumerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "2207:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "name": "_rateFeesDenominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "2235:28:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2235:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2185:79:4"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2303:0:4"
            },
            "scope": 337,
            "src": "2160:353:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 286,
              "nodeType": "Block",
              "src": "2798:112:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 278,
                      "name": "requestBurnerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "2804:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 279,
                      "name": "_requestBurnerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "2828:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2804:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "2804:46:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 283,
                        "name": "requestBurnerContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "2883:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 282,
                      "name": "UpdatedBurnerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "2861:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 285,
                  "nodeType": "EmitStatement",
                  "src": "2856:49:4"
                }
              ]
            },
            "documentation": "@notice Set the request burner address.\n@param _requestBurnerContract address of the contract that will burn req token (probably through Kyber)",
            "id": 287,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 276,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 275,
                  "name": "onlyWhitelistAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1266,
                  "src": "2777:18:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2777:18:4"
              }
            ],
            "name": "setRequestBurnerContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "name": "_requestBurnerContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "2720:38:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2719:40:4"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2798:0:4"
            },
            "scope": 337,
            "src": "2686:224:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "3169:316:4",
              "statements": [
                {
                  "assignments": [
                    295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "name": "computedAllFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "3199:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3199:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 300,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 298,
                        "name": "rateFeesNumerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "3241:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 296,
                        "name": "_contentSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "3224:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1477,
                      "src": "3224:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3224:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3199:60:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 301,
                      "name": "rateFeesDenominator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "3270:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3293:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3270:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 312,
                  "nodeType": "IfStatement",
                  "src": "3266:101:4",
                  "trueBody": {
                    "id": 311,
                    "nodeType": "Block",
                    "src": "3296:71:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 304,
                            "name": "computedAllFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "3304:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 307,
                                "name": "rateFeesDenominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 213,
                                "src": "3340:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 305,
                                "name": "computedAllFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 295,
                                "src": "3321:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1501,
                              "src": "3321:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3321:39:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3304:56:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 310,
                        "nodeType": "ExpressionStatement",
                        "src": "3304:56:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 313,
                      "name": "computedAllFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "3377:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 314,
                      "name": "minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 209,
                      "src": "3395:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3377:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 321,
                    "nodeType": "Block",
                    "src": "3445:36:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 319,
                          "name": "computedAllFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 295,
                          "src": "3460:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 293,
                        "id": 320,
                        "nodeType": "Return",
                        "src": "3453:21:4"
                      }
                    ]
                  },
                  "id": 322,
                  "nodeType": "IfStatement",
                  "src": "3373:108:4",
                  "trueBody": {
                    "id": 318,
                    "nodeType": "Block",
                    "src": "3407:32:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 316,
                          "name": "minimumFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 209,
                          "src": "3422:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 293,
                        "id": 317,
                        "nodeType": "Return",
                        "src": "3415:17:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Computes the fees.\n@param _contentSize Size of the content of the block to be stored\n@return the expected amount of fees in wei",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFeesAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 289,
                  "name": "_contentSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "3104:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3104:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3103:22:4"
            },
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "3158:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3158:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3157:9:4"
            },
            "scope": 337,
            "src": "3081:404:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 335,
              "nodeType": "Block",
              "src": "3680:85:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 332,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "3752:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 329,
                        "name": "requestBurnerContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "3721:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3721:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3721:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "3721:39:4"
                }
              ]
            },
            "documentation": "@notice Sends fees to the request burning address.\n@param _amount amount to send to the burning address",
            "id": 336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectForREQBurning",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "3648:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3648:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3647:17:4"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3680:0:4"
            },
            "scope": 337,
            "src": "3618:147:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 338,
        "src": "269:3498:4"
      }
    ],
    "src": "0:3768:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/bertrand/Desktop/requestNetwork-private/packages/smart-contracts/src/StorageFeeCollector.sol",
    "exportedSymbols": {
      "StorageFeeCollector": [
        337
      ]
    },
    "id": 338,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 200,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 201,
        "nodeType": "ImportDirective",
        "scope": 338,
        "sourceUnit": 1571,
        "src": "25:59:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/roles/WhitelistAdminRole.sol",
        "file": "openzeppelin-solidity/contracts/access/roles/WhitelistAdminRole.sol",
        "id": 202,
        "nodeType": "ImportDirective",
        "scope": 338,
        "sourceUnit": 1334,
        "src": "85:77:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 203,
              "name": "WhitelistAdminRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1333,
              "src": "301:18:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistAdminRole_$1333",
                "typeString": "contract WhitelistAdminRole"
              }
            },
            "id": 204,
            "nodeType": "InheritanceSpecifier",
            "src": "301:18:4"
          }
        ],
        "contractDependencies": [
          1333
        ],
        "contractKind": "contract",
        "documentation": "@title StorageFeeCollector\n * @notice StorageFeeCollector is a contract managing the fees",
        "fullyImplemented": true,
        "id": 337,
        "linearizedBaseContracts": [
          337,
          1333
        ],
        "name": "StorageFeeCollector",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 207,
            "libraryName": {
              "contractScope": null,
              "id": 205,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1570,
              "src": "330:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1570",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "324:27:4",
            "typeName": {
              "id": 206,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "343:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 209,
            "name": "minimumFee",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "1045:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 208,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1045:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 211,
            "name": "rateFeesNumerator",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "1074:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 210,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1074:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 213,
            "name": "rateFeesDenominator",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "1110:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 212,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1110:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 215,
            "name": "requestBurnerContract",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "1203:44:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 214,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1203:15:4",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 223,
            "name": "UpdatedFeeParameters",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "indexed": false,
                  "name": "minimumFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "1279:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 219,
                  "indexed": false,
                  "name": "rateFeesNumerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "1299:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 221,
                  "indexed": false,
                  "name": "rateFeesDenominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "1326:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1278:76:4"
            },
            "src": "1252:103:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 227,
            "name": "UpdatedMinimumFeeThreshold",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "indexed": false,
                  "name": "threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "1391:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1390:19:4"
            },
            "src": "1358:52:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 231,
            "name": "UpdatedBurnerContract",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "indexed": false,
                  "name": "burnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "1441:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1440:23:4"
            },
            "src": "1413:51:4"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "1763:57:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 236,
                      "name": "requestBurnerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "1769:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 237,
                      "name": "_requestBurnerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "1793:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1769:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:46:4"
                }
              ]
            },
            "documentation": "@param _requestBurnerContract Address of the contract where to send the ether.\nThis burner contract will have a function that can be called by anyone and will exchange ether to req via Kyber and burn the REQ",
            "id": 241,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "name": "_requestBurnerContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "1710:38:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1709:40:4"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1763:0:4"
            },
            "scope": 337,
            "src": "1698:122:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "2303:210:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 252,
                      "name": "minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 209,
                      "src": "2309:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 253,
                      "name": "_minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 243,
                      "src": "2322:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2309:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:24:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 256,
                      "name": "rateFeesNumerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "2339:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 257,
                      "name": "_rateFeesNumerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "2359:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2339:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "2339:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 260,
                      "name": "rateFeesDenominator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "2383:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 261,
                      "name": "_rateFeesDenominator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "2405:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2383:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "2383:42:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 265,
                        "name": "minimumFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "2457:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 266,
                        "name": "rateFeesNumerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "2469:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "rateFeesDenominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "2488:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 264,
                      "name": "UpdatedFeeParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "2436:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2436:72:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "EmitStatement",
                  "src": "2431:77:4"
                }
              ]
            },
            "documentation": "@notice Sets the fees rate and minimum fee.\n@dev if the _rateFeesDenominator is 0, it will be treated as 1. (in other words, the computation of the fees will not use it)\n@param _minimumFee minimum fixed fee\n@param _rateFeesNumerator numerator rate\n@param _rateFeesDenominator denominator rate",
            "id": 271,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 250,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 249,
                  "name": "onlyWhitelistAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1266,
                  "src": "2282:18:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2282:18:4"
              }
            ],
            "name": "setFeeParameters",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "name": "_minimumFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "2186:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2186:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 245,
                  "name": "_rateFeesNumerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "2207:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "name": "_rateFeesDenominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "2235:28:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2235:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2185:79:4"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2303:0:4"
            },
            "scope": 337,
            "src": "2160:353:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 286,
              "nodeType": "Block",
              "src": "2798:112:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 278,
                      "name": "requestBurnerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "2804:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 279,
                      "name": "_requestBurnerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "2828:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2804:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "2804:46:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 283,
                        "name": "requestBurnerContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "2883:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 282,
                      "name": "UpdatedBurnerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "2861:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 285,
                  "nodeType": "EmitStatement",
                  "src": "2856:49:4"
                }
              ]
            },
            "documentation": "@notice Set the request burner address.\n@param _requestBurnerContract address of the contract that will burn req token (probably through Kyber)",
            "id": 287,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 276,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 275,
                  "name": "onlyWhitelistAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1266,
                  "src": "2777:18:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2777:18:4"
              }
            ],
            "name": "setRequestBurnerContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "name": "_requestBurnerContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "2720:38:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2719:40:4"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2798:0:4"
            },
            "scope": 337,
            "src": "2686:224:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "3169:316:4",
              "statements": [
                {
                  "assignments": [
                    295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "name": "computedAllFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "3199:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3199:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 300,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 298,
                        "name": "rateFeesNumerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "3241:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 296,
                        "name": "_contentSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "3224:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1477,
                      "src": "3224:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3224:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3199:60:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 301,
                      "name": "rateFeesDenominator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "3270:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3293:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3270:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 312,
                  "nodeType": "IfStatement",
                  "src": "3266:101:4",
                  "trueBody": {
                    "id": 311,
                    "nodeType": "Block",
                    "src": "3296:71:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 304,
                            "name": "computedAllFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "3304:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 307,
                                "name": "rateFeesDenominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 213,
                                "src": "3340:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 305,
                                "name": "computedAllFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 295,
                                "src": "3321:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1501,
                              "src": "3321:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3321:39:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3304:56:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 310,
                        "nodeType": "ExpressionStatement",
                        "src": "3304:56:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 313,
                      "name": "computedAllFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "3377:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 314,
                      "name": "minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 209,
                      "src": "3395:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3377:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 321,
                    "nodeType": "Block",
                    "src": "3445:36:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 319,
                          "name": "computedAllFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 295,
                          "src": "3460:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 293,
                        "id": 320,
                        "nodeType": "Return",
                        "src": "3453:21:4"
                      }
                    ]
                  },
                  "id": 322,
                  "nodeType": "IfStatement",
                  "src": "3373:108:4",
                  "trueBody": {
                    "id": 318,
                    "nodeType": "Block",
                    "src": "3407:32:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 316,
                          "name": "minimumFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 209,
                          "src": "3422:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 293,
                        "id": 317,
                        "nodeType": "Return",
                        "src": "3415:17:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Computes the fees.\n@param _contentSize Size of the content of the block to be stored\n@return the expected amount of fees in wei",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFeesAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 289,
                  "name": "_contentSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "3104:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3104:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3103:22:4"
            },
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "3158:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3158:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3157:9:4"
            },
            "scope": 337,
            "src": "3081:404:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 335,
              "nodeType": "Block",
              "src": "3680:85:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 332,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "3752:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 329,
                        "name": "requestBurnerContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "3721:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3721:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3721:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "3721:39:4"
                }
              ]
            },
            "documentation": "@notice Sends fees to the request burning address.\n@param _amount amount to send to the burning address",
            "id": 336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectForREQBurning",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "3648:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3648:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3647:17:4"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3680:0:4"
            },
            "scope": 337,
            "src": "3618:147:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 338,
        "src": "269:3498:4"
      }
    ],
    "src": "0:3768:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-04T06:27:46.623Z",
  "devdoc": {
    "methods": {
      "constructor": {
        "params": {
          "_requestBurnerContract": "Address of the contract where to send the ether. This burner contract will have a function that can be called by anyone and will exchange ether to req via Kyber and burn the REQ"
        }
      },
      "getFeesAmount(uint256)": {
        "params": {
          "_contentSize": "Size of the content of the block to be stored"
        },
        "return": "the expected amount of fees in wei"
      },
      "setFeeParameters(uint256,uint256,uint256)": {
        "details": "if the _rateFeesDenominator is 0, it will be treated as 1. (in other words, the computation of the fees will not use it)",
        "params": {
          "_minimumFee": "minimum fixed fee",
          "_rateFeesDenominator": "denominator rate",
          "_rateFeesNumerator": "numerator rate"
        }
      },
      "setRequestBurnerContract(address)": {
        "params": {
          "_requestBurnerContract": "address of the contract that will burn req token (probably through Kyber)"
        }
      }
    },
    "title": "StorageFeeCollector"
  },
  "userdoc": {
    "methods": {
      "getFeesAmount(uint256)": {
        "notice": "Computes the fees."
      },
      "setFeeParameters(uint256,uint256,uint256)": {
        "notice": "Sets the fees rate and minimum fee."
      },
      "setRequestBurnerContract(address)": {
        "notice": "Set the request burner address."
      }
    },
    "notice": "StorageFeeCollector is a contract managing the fees"
  }
}