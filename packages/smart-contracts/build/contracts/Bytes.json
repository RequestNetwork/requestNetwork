{
  "contractName": "Bytes",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"Bytes util library.\"},\"userdoc\":{\"methods\":{},\"notice\":\"Collection of utility functions to manipulate bytes for Request.\"}},\"settings\":{\"compilationTarget\":{\"/Users/bertrand/Desktop/requestNetwork-private/packages/smart-contracts/src/Bytes.sol\":\"Bytes\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/bertrand/Desktop/requestNetwork-private/packages/smart-contracts/src/Bytes.sol\":{\"keccak256\":\"0x464b989de612e364d4bf9eefc909741fcf377d48dcba65e37041c6f89a69ee0c\",\"urls\":[\"bzz-raw://2d83f156e05c9bb6985485c6eac9a93cbc0c6d630b4960f7f7362b163acd6991\",\"dweb:/ipfs/QmYUFasqsmpU7anqgqbwxv7LBR5r7jUJ5FLVm8DPvn9MuB\"]}},\"version\":1}",
  "bytecode": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582054b562ae2dffea9ca6518a43ca1cbbfd8700297d1fac548c99a7681af4f0903164736f6c634300050c0032",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582054b562ae2dffea9ca6518a43ca1cbbfd8700297d1fac548c99a7681af4f0903164736f6c634300050c0032",
  "sourceMap": "140:569:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "140:569:0:-;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\n\n/**\n * @title Bytes util library.\n * @notice Collection of utility functions to manipulate bytes for Request.\n */\nlibrary Bytes {\n  /**\n    * @notice Extract a bytes32 from a bytes.\n    * @param data bytes from where the bytes32 will be extract\n    * @param offset position of the first byte of the bytes32\n    * @return address\n    */\n  function extractBytes32(bytes memory data, uint offset)\n    internal\n    pure\n    returns (bytes32 bs)\n  {\n    require(offset >= 0 && offset + 32 <= data.length, \"offset value should be in the correct range\");\n\n    // solium-disable-next-line security/no-inline-assembly\n    assembly {\n        bs := mload(add(data, add(32, offset)))\n    }\n  }\n}\n",
  "sourcePath": "/Users/bertrand/Desktop/requestNetwork-private/packages/smart-contracts/src/Bytes.sol",
  "ast": {
    "absolutePath": "/Users/bertrand/Desktop/requestNetwork-private/packages/smart-contracts/src/Bytes.sol",
    "exportedSymbols": {
      "Bytes": [
        27
      ]
    },
    "id": 28,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Bytes util library.\n@notice Collection of utility functions to manipulate bytes for Request.",
        "fullyImplemented": true,
        "id": 27,
        "linearizedBaseContracts": [
          27
        ],
        "name": "Bytes",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "469:238:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 11,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "483:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 12,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "493:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "483:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 16,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 14,
                              "name": "offset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "498:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3332",
                              "id": 15,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "507:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            },
                            "src": "498:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 17,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3,
                              "src": "513:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 18,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "513:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "498:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "483:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f66667365742076616c75652073686f756c6420626520696e2074686520636f72726563742072616e6765",
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "526:45:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737ab78a14ecdda8d16f9884c32f8e2be191a156127742338ea68795b702182d",
                          "typeString": "literal_string \"offset value should be in the correct range\""
                        },
                        "value": "offset value should be in the correct range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737ab78a14ecdda8d16f9884c32f8e2be191a156127742338ea68795b702182d",
                          "typeString": "literal_string \"offset value should be in the correct range\""
                        }
                      ],
                      "id": 10,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1588,
                        1589
                      ],
                      "referencedDeclaration": 1589,
                      "src": "475:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "475:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "475:97:0"
                },
                {
                  "externalReferences": [
                    {
                      "bs": {
                        "declaration": 8,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "658:2:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 5,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "688:6:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "data": {
                        "declaration": 3,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "674:4:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 24,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    bs := mload(add(data, add(32, offset)))\n}",
                  "src": "639:64:0"
                }
              ]
            },
            "documentation": "@notice Extract a bytes32 from a bytes.\n@param data bytes from where the bytes32 will be extract\n@param offset position of the first byte of the bytes32\n@return address",
            "id": 26,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extractBytes32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "388:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "name": "offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "407:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "407:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "387:32:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "name": "bs",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "455:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "454:12:0"
            },
            "scope": 27,
            "src": "364:343:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 28,
        "src": "140:569:0"
      }
    ],
    "src": "0:710:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/bertrand/Desktop/requestNetwork-private/packages/smart-contracts/src/Bytes.sol",
    "exportedSymbols": {
      "Bytes": [
        27
      ]
    },
    "id": 28,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Bytes util library.\n@notice Collection of utility functions to manipulate bytes for Request.",
        "fullyImplemented": true,
        "id": 27,
        "linearizedBaseContracts": [
          27
        ],
        "name": "Bytes",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "469:238:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 11,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "483:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 12,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "493:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "483:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 16,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 14,
                              "name": "offset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "498:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3332",
                              "id": 15,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "507:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            },
                            "src": "498:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 17,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3,
                              "src": "513:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 18,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "513:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "498:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "483:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f66667365742076616c75652073686f756c6420626520696e2074686520636f72726563742072616e6765",
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "526:45:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737ab78a14ecdda8d16f9884c32f8e2be191a156127742338ea68795b702182d",
                          "typeString": "literal_string \"offset value should be in the correct range\""
                        },
                        "value": "offset value should be in the correct range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737ab78a14ecdda8d16f9884c32f8e2be191a156127742338ea68795b702182d",
                          "typeString": "literal_string \"offset value should be in the correct range\""
                        }
                      ],
                      "id": 10,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1588,
                        1589
                      ],
                      "referencedDeclaration": 1589,
                      "src": "475:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "475:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "475:97:0"
                },
                {
                  "externalReferences": [
                    {
                      "bs": {
                        "declaration": 8,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "658:2:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 5,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "688:6:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "data": {
                        "declaration": 3,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "674:4:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 24,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    bs := mload(add(data, add(32, offset)))\n}",
                  "src": "639:64:0"
                }
              ]
            },
            "documentation": "@notice Extract a bytes32 from a bytes.\n@param data bytes from where the bytes32 will be extract\n@param offset position of the first byte of the bytes32\n@return address",
            "id": 26,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extractBytes32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "388:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "name": "offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "407:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "407:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "387:32:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "name": "bs",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "455:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "454:12:0"
            },
            "scope": 27,
            "src": "364:343:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 28,
        "src": "140:569:0"
      }
    ],
    "src": "0:710:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-04T06:27:46.607Z",
  "devdoc": {
    "methods": {},
    "title": "Bytes util library."
  },
  "userdoc": {
    "methods": {},
    "notice": "Collection of utility functions to manipulate bytes for Request."
  }
}