/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from 'ethers';
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from '@nomiclabs/hardhat-ethers/types';

import * as Contracts from '.';

declare module 'hardhat/types/runtime' {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: 'AccessControl',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: 'IAccessControl',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: 'IERC20',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: 'ERC165',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: 'IERC165',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: 'Diamond',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Diamond__factory>;
    getContractFactory(
      name: 'DiamondChainlinkConversionFacet',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondChainlinkConversionFacet__factory>;
    getContractFactory(
      name: 'DiamondCutFacet',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondCutFacet__factory>;
    getContractFactory(
      name: 'DiamondLoupeFacet',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondLoupeFacet__factory>;
    getContractFactory(
      name: 'DiamondNativeHashFacet',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondNativeHashFacet__factory>;
    getContractFactory(
      name: 'DiamondPaymentConversionFacet',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondPaymentConversionFacet__factory>;
    getContractFactory(
      name: 'DiamondPaymentFacet',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondPaymentFacet__factory>;
    getContractFactory(
      name: 'DiamonPaymentSwapFacet',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamonPaymentSwapFacet__factory>;
    getContractFactory(
      name: 'OwnershipFacet',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.OwnershipFacet__factory>;
    getContractFactory(
      name: 'Test1Facet',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Test1Facet__factory>;
    getContractFactory(
      name: 'Test2Facet',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Test2Facet__factory>;
    getContractFactory(
      name: 'IDiamondChainlinkConversion',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IDiamondChainlinkConversion__factory>;
    getContractFactory(
      name: 'IDiamondCut',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: 'IDiamondLoupe',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: 'IDiamondPayment',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IDiamondPayment__factory>;
    getContractFactory(
      name: 'IDiamondPaymentConversion',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IDiamondPaymentConversion__factory>;
    getContractFactory(
      name: 'IERC165',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: 'IERC173',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: 'ISwapRouter',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ISwapRouter__factory>;
    getContractFactory(
      name: 'AggregatorFraction',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.AggregatorFraction__factory>;
    getContractFactory(
      name: 'ERC20fraction',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20fraction__factory>;
    getContractFactory(
      name: 'LibChainlinkConversion',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.LibChainlinkConversion__factory>;
    getContractFactory(
      name: 'LibDiamond',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.LibDiamond__factory>;
    getContractFactory(
      name: 'DiamondInit',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondInit__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer,
    ): Promise<ethers.ContractFactory>;
  }
}
