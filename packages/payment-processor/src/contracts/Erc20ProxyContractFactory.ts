/* tslint:disable */
/* eslint-disable spellcheck/spell-checker */
/* Generated by ts-generator ver. 0.0.8 */

import { Contract, Signer } from 'ethers';
import { Provider } from 'ethers/providers';

import { Erc20ProxyContract } from './Erc20ProxyContract';

export class Erc20ProxyContractFactory {
  static connect(address: string, signerOrProvider: Signer | Provider): Erc20ProxyContract {
    return new Contract(address, _abi, signerOrProvider) as Erc20ProxyContract;
  }
}

const _abi: any = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'bytes',
        name: 'paymentReference',
        type: 'bytes',
      },
    ],
    name: 'TransferWithReference',
    type: 'event',
  },
  {
    payable: true,
    stateMutability: 'payable',
    type: 'fallback',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_paymentReference',
        type: 'bytes',
      },
    ],
    name: 'transferFromWithReference',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
];
